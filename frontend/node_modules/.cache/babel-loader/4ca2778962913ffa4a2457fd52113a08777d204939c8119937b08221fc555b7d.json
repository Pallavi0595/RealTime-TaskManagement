{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\ReactForm\\\\realtime-app\\\\frontend\\\\src\\\\componets\\\\TaskModal.js\",\n  _s = $RefreshSig$();\n// TaskModal.js\nimport React, { useState } from \"react\";\nimport { addTask } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskModal = ({\n  isOpen,\n  onClose,\n  onTaskAdded\n}) => {\n  _s();\n  const [taskData, setTaskData] = useState({\n    name: \"\",\n    status: \"Pending\"\n  });\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const handleChange = e => {\n    setTaskData({\n      ...taskData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!taskData.name.trim()) {\n      setMessage(\"Task name cannot be empty.\");\n      return;\n    }\n    setLoading(true);\n    setMessage(\"\");\n    try {\n      const result = await addTask(taskData);\n      setMessage(\"Task added successfully!\");\n      onTaskAdded(result); // Notify parent component to refresh task list\n      setTaskData({\n        name: \"\",\n        status: \"Pending\"\n      });\n    } catch (error) {\n      setMessage(\"Error saving task: \" + error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Enter Task Name\",\n          value: taskData.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"status\",\n          value: taskData.status,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Pending\",\n            children: \"Pending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"In Progress\",\n            children: \"In Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Completed\",\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          children: loading ? \"Submitting...\" : \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskModal, \"LuFYa5rBeVTbKeFYOgf0e5f9xmU=\");\n_c = TaskModal;\nexport default TaskModal;\nvar _c;\n$RefreshReg$(_c, \"TaskModal\");","map":{"version":3,"names":["React","useState","addTask","jsxDEV","_jsxDEV","TaskModal","isOpen","onClose","onTaskAdded","_s","taskData","setTaskData","name","status","loading","setLoading","message","setMessage","handleChange","e","target","value","handleSubmit","preventDefault","trim","result","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/ReactForm/realtime-app/frontend/src/componets/TaskModal.js"],"sourcesContent":["// TaskModal.js\r\nimport React, { useState } from \"react\";\r\nimport { addTask } from \"../api\";\r\n\r\nconst TaskModal = ({ isOpen, onClose, onTaskAdded }) => {\r\n  const [taskData, setTaskData] = useState({ name: \"\", status: \"Pending\" });\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setTaskData({\r\n      ...taskData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!taskData.name.trim()) {\r\n      setMessage(\"Task name cannot be empty.\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setMessage(\"\");\r\n\r\n    try {\r\n      const result = await addTask(taskData);\r\n      setMessage(\"Task added successfully!\");\r\n      onTaskAdded(result); // Notify parent component to refresh task list\r\n      setTaskData({ name: \"\", status: \"Pending\" });\r\n    } catch (error) {\r\n      setMessage(\"Error saving task: \" + error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        <h2>Add Task</h2>\r\n        {message && <div>{message}</div>}\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Enter Task Name\"\r\n            value={taskData.name}\r\n            onChange={handleChange}\r\n          />\r\n          <select name=\"status\" value={taskData.status} onChange={handleChange}>\r\n            <option value=\"Pending\">Pending</option>\r\n            <option value=\"In Progress\">In Progress</option>\r\n            <option value=\"Completed\">Completed</option>\r\n          </select>\r\n          <button type=\"submit\" disabled={loading}>\r\n            {loading ? \"Submitting...\" : \"Submit\"}\r\n          </button>\r\n        </form>\r\n        <button onClick={onClose}>Close</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}