{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\ReactForm\\\\realtime-app\\\\frontend\\\\src\\\\componets\\\\EditTaskModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { updateTaskStatus } from \"../api\"; // Import the API method to update the task\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditTaskModal = ({\n  task,\n  onClose,\n  onTaskUpdated\n}) => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n\n  // Pre-fill the form with task data when it is passed\n  useEffect(() => {\n    if (task) {\n      setName(task.name);\n      setStatus(task.status);\n    }\n  }, [task]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Call API to update the task\n    try {\n      const updatedTask = await updateTaskStatus(task.id, {\n        name,\n        status\n      });\n      onTaskUpdated(updatedTask); // Inform the parent component of the update\n      onClose(); // Close the form\n    } catch (error) {\n      console.error(\"Error updating task:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-task-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Task Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: status,\n          onChange: e => setStatus(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Pending\",\n            children: \"Pending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"In Progress\",\n            children: \"In Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Completed\",\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(EditTaskModal, \"JNaPl6Tq+4zm/vQM2QDqH2YuZ/w=\");\n_c = EditTaskModal;\nexport default EditTaskModal;\nvar _c;\n$RefreshReg$(_c, \"EditTaskModal\");","map":{"version":3,"names":["React","useState","useEffect","updateTaskStatus","jsxDEV","_jsxDEV","EditTaskModal","task","onClose","onTaskUpdated","_s","name","setName","status","setStatus","handleSubmit","e","preventDefault","updatedTask","id","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/ReactForm/realtime-app/frontend/src/componets/EditTaskModal.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { updateTaskStatus } from \"../api\"; // Import the API method to update the task\r\n\r\nconst EditTaskModal = ({ task, onClose, onTaskUpdated }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n\r\n  // Pre-fill the form with task data when it is passed\r\n  useEffect(() => {\r\n    if (task) {\r\n      setName(task.name);\r\n      setStatus(task.status);\r\n    }\r\n  }, [task]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Call API to update the task\r\n    try {\r\n      const updatedTask = await updateTaskStatus(task.id, { name, status });\r\n      onTaskUpdated(updatedTask); // Inform the parent component of the update\r\n      onClose(); // Close the form\r\n    } catch (error) {\r\n      console.error(\"Error updating task:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"edit-task-form-container\">\r\n      <h2>Edit Task</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Task Name</label>\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Status</label>\r\n          <select\r\n            value={status}\r\n            onChange={(e) => setStatus(e.target.value)}\r\n            required\r\n          >\r\n            <option value=\"Pending\">Pending</option>\r\n            <option value=\"In Progress\">In Progress</option>\r\n            <option value=\"Completed\">Completed</option>\r\n          </select>\r\n        </div>\r\n        <button type=\"submit\">Update Task</button>\r\n        <button type=\"button\" onClick={onClose}>\r\n          Cancel\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditTaskModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}