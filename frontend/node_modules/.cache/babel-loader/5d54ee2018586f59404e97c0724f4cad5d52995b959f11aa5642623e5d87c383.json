{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\ReactForm\\\\realtime-app\\\\frontend\\\\src\\\\componets\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getTasks, updateTaskStatus } from \"../api\"; // Assuming you have an API utility\nimport TaskModal from \"./TaskModal\";\nimport EditTaskModal from \"./EditTaskModal\"; // Import the EditTaskModal component\nimport \"./TaskList.css\";\nimport { FaTrashAlt } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [isEditModalOpen, setEditModalOpen] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n\n  // Fetch tasks from the backend\n  const fetchTasks = async () => {\n    try {\n      const taskList = await getTasks();\n      setTasks(taskList);\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  // Show the Add Task modal\n  const handleAddTask = () => {\n    setModalOpen(true);\n  };\n\n  // Handle task addition\n  const handleTaskAdded = newTask => {\n    setTasks(prevTasks => [...prevTasks, newTask]);\n  };\n\n  // Handle Edit icon click\n  const handleEditClick = task => {\n    setSelectedTask(task); // Set the selected task for editing\n    setEditModalOpen(true);\n  };\n  const handleDeleteTask = taskId => {\n    console.log(`Delete task with ID: ${taskId}`);\n  };\n  // Handle task update\n  const handleTaskUpdated = async updatedTask => {\n    try {\n      await updateTaskStatus(updatedTask.id, updatedTask); // Update the task on the backend\n      setTasks(prevTasks => prevTasks.map(task => task.id === updatedTask.id ? updatedTask : task));\n      setEditModalOpen(false); // Close the edit modal\n    } catch (error) {\n      console.error(\"Error updating task:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Real-Time Task Management Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTask,\n      className: \"add-task-btn\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"task-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Task ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Task Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Created At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.createdAt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"edit-icon\",\n              onClick: () => handleEditClick(task),\n              children: \"\\u270F\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FaTrashAlt, {\n              className: \"icon delete-icon\",\n              onClick: () => handleDeleteTask(task.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskModal, {\n      isOpen: isModalOpen,\n      onClose: () => setModalOpen(false),\n      onTaskAdded: handleTaskAdded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditTaskModal, {\n      isOpen: isEditModalOpen,\n      onClose: () => setEditModalOpen(false),\n      task: selectedTask,\n      onTaskUpdated: handleTaskUpdated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"O3AfGr5tVvi8TJ8QSV6JYN0MLNY=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","getTasks","updateTaskStatus","TaskModal","EditTaskModal","FaTrashAlt","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","isModalOpen","setModalOpen","isEditModalOpen","setEditModalOpen","selectedTask","setSelectedTask","fetchTasks","taskList","error","console","handleAddTask","handleTaskAdded","newTask","prevTasks","handleEditClick","task","handleDeleteTask","taskId","log","handleTaskUpdated","updatedTask","id","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","status","createdAt","isOpen","onClose","onTaskAdded","onTaskUpdated","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/ReactForm/realtime-app/frontend/src/componets/TaskList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getTasks, updateTaskStatus } from \"../api\"; // Assuming you have an API utility\r\nimport TaskModal from \"./TaskModal\";\r\nimport EditTaskModal from \"./EditTaskModal\"; // Import the EditTaskModal component\r\nimport \"./TaskList.css\";\r\nimport {  FaTrashAlt } from \"react-icons/fa\"; \r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [isModalOpen, setModalOpen] = useState(false);\r\n  const [isEditModalOpen, setEditModalOpen] = useState(false);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n\r\n  // Fetch tasks from the backend\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const taskList = await getTasks();\r\n      setTasks(taskList);\r\n    } catch (error) {\r\n      console.error(\"Error fetching tasks:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  // Show the Add Task modal\r\n  const handleAddTask = () => {\r\n    setModalOpen(true);\r\n  };\r\n\r\n  // Handle task addition\r\n  const handleTaskAdded = (newTask) => {\r\n    setTasks((prevTasks) => [...prevTasks, newTask]);\r\n  };\r\n\r\n  // Handle Edit icon click\r\n  const handleEditClick = (task) => {\r\n    setSelectedTask(task); // Set the selected task for editing\r\n    setEditModalOpen(true);\r\n  };\r\n  const handleDeleteTask = (taskId) => {\r\n        console.log(`Delete task with ID: ${taskId}`);\r\n      };\r\n  // Handle task update\r\n  const handleTaskUpdated = async (updatedTask) => {\r\n    try {\r\n      await updateTaskStatus(updatedTask.id, updatedTask); // Update the task on the backend\r\n      setTasks((prevTasks) =>\r\n        prevTasks.map((task) =>\r\n          task.id === updatedTask.id ? updatedTask : task\r\n        )\r\n      );\r\n      setEditModalOpen(false); // Close the edit modal\r\n    } catch (error) {\r\n      console.error(\"Error updating task:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-list-container\">\r\n      <h1>Real-Time Task Management Dashboard</h1>\r\n      <button onClick={handleAddTask} className=\"add-task-btn\">\r\n        Add Task\r\n      </button>\r\n\r\n      <table className=\"task-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Task ID</th>\r\n            <th>Task Name</th>\r\n            <th>Status</th>\r\n            <th>Created At</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tasks.map((task) => (\r\n            <tr key={task.id}>\r\n              <td>{task.id}</td>\r\n              <td>{task.name}</td>\r\n              <td>{task.status}</td>\r\n              <td>{task.createdAt}</td>\r\n              <td>\r\n                <span\r\n                  className=\"edit-icon\"\r\n                  onClick={() => handleEditClick(task)}\r\n                >\r\n                  ✏️\r\n                </span>\r\n                <FaTrashAlt \r\n                className=\"icon delete-icon\" \r\n                onClick={() => handleDeleteTask(task.id)} \r\n              />\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {/* Add Task Modal */}\r\n      <TaskModal\r\n        isOpen={isModalOpen}\r\n        onClose={() => setModalOpen(false)}\r\n        onTaskAdded={handleTaskAdded}\r\n      />\r\n\r\n      {/* Edit Task Modal */}\r\n      <EditTaskModal\r\n        isOpen={isEditModalOpen}\r\n        onClose={() => setEditModalOpen(false)}\r\n        task={selectedTask}\r\n        onTaskUpdated={handleTaskUpdated}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}