{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\ReactForm\\\\realtime-app\\\\frontend\\\\src\\\\componets\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getTasks, deleteTask, updateTaskStatus } from \"../api\"; // Assuming you have these functions in api.js\nimport { FaEdit, FaTrash } from \"react-icons/fa\"; // Using react-icons for Edit and Delete icons\nimport TaskModal from \"./TaskModal\";\nimport \"./TaskList.css\"; // Ensure the CSS is imported for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [taskToEdit, setTaskToEdit] = useState(null);\n\n  // Fetch tasks from the backend\n  const fetchTasks = async () => {\n    try {\n      const taskList = await getTasks(); // Replace with actual API call\n      setTasks(taskList);\n    } catch (error) {\n      console.error(\"Error fetching tasks:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchTasks(); // Load tasks on page load\n  }, []);\n\n  // Show the Add Task modal\n  const handleAddTask = () => {\n    setTaskToEdit(null); // Clear any task that might be in edit mode\n    setModalOpen(true);\n  };\n\n  // Handle task addition\n  const handleTaskAdded = newTask => {\n    setTasks(prevTasks => [...prevTasks, newTask]); // Add new task to the list\n  };\n\n  // Handle Edit action\n  const handleEdit = task => {\n    setTaskToEdit(task); // Set the task that we want to edit\n    setModalOpen(true); // Open the modal to edit the task\n  };\n\n  // Handle Delete action\n  const handleDelete = async taskId => {\n    try {\n      await deleteTask(taskId); // Send delete request to API\n      setTasks(tasks.filter(task => task.id !== taskId)); // Remove deleted task from UI\n    } catch (error) {\n      console.error(\"Error deleting task:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Real-Time Task Management Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTask,\n      className: \"add-task-btn\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"task-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Task ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Task Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Created At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.createdAt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(FaEdit, {\n              onClick: () => handleEdit(task) // Open Edit modal\n              ,\n              className: \"edit-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FaTrash, {\n              onClick: () => handleDelete(task.id) // Delete the task\n              ,\n              className: \"delete-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskModal, {\n      isOpen: isModalOpen,\n      onClose: () => setModalOpen(false),\n      onTaskAdded: handleTaskAdded,\n      taskToEdit: taskToEdit // Pass the task data to the modal if we are editing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"XNGdMTICmVnob1n/7Fx8CTiyrbQ=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","getTasks","deleteTask","updateTaskStatus","FaEdit","FaTrash","TaskModal","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","isModalOpen","setModalOpen","taskToEdit","setTaskToEdit","fetchTasks","taskList","error","console","handleAddTask","handleTaskAdded","newTask","prevTasks","handleEdit","task","handleDelete","taskId","filter","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","name","status","createdAt","isOpen","onClose","onTaskAdded","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/ReactForm/realtime-app/frontend/src/componets/TaskList.js"],"sourcesContent":["\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { getTasks, deleteTask, updateTaskStatus } from \"../api\"; // Assuming you have these functions in api.js\r\nimport { FaEdit, FaTrash } from \"react-icons/fa\"; // Using react-icons for Edit and Delete icons\r\nimport TaskModal from \"./TaskModal\";\r\nimport \"./TaskList.css\"; // Ensure the CSS is imported for styling\r\n\r\nconst TaskList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [isModalOpen, setModalOpen] = useState(false);\r\n  const [taskToEdit, setTaskToEdit] = useState(null);\r\n\r\n  // Fetch tasks from the backend\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const taskList = await getTasks(); // Replace with actual API call\r\n      setTasks(taskList);\r\n    } catch (error) {\r\n      console.error(\"Error fetching tasks:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTasks(); // Load tasks on page load\r\n  }, []);\r\n\r\n  // Show the Add Task modal\r\n  const handleAddTask = () => {\r\n    setTaskToEdit(null); // Clear any task that might be in edit mode\r\n    setModalOpen(true);\r\n  };\r\n\r\n  // Handle task addition\r\n  const handleTaskAdded = (newTask) => {\r\n    setTasks((prevTasks) => [...prevTasks, newTask]); // Add new task to the list\r\n  };\r\n\r\n  // Handle Edit action\r\n  const handleEdit = (task) => {\r\n    setTaskToEdit(task); // Set the task that we want to edit\r\n    setModalOpen(true); // Open the modal to edit the task\r\n  };\r\n\r\n  // Handle Delete action\r\n  const handleDelete = async (taskId) => {\r\n    try {\r\n      await deleteTask(taskId); // Send delete request to API\r\n      setTasks(tasks.filter((task) => task.id !== taskId)); // Remove deleted task from UI\r\n    } catch (error) {\r\n      console.error(\"Error deleting task:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-list-container\">\r\n      <h1>Real-Time Task Management Dashboard</h1>\r\n      <button onClick={handleAddTask} className=\"add-task-btn\">Add Task</button>\r\n\r\n      <table className=\"task-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Task ID</th>\r\n            <th>Task Name</th>\r\n            <th>Status</th>\r\n            <th>Created At</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tasks.map((task) => (\r\n            <tr key={task.id}>\r\n              <td>{task.id}</td>\r\n              <td>{task.name}</td>\r\n              <td>{task.status}</td>\r\n              <td>{task.createdAt}</td>\r\n              <td>\r\n                <FaEdit\r\n                  onClick={() => handleEdit(task)} // Open Edit modal\r\n                  className=\"edit-icon\"\r\n                />\r\n                <FaTrash\r\n                  onClick={() => handleDelete(task.id)} // Delete the task\r\n                  className=\"delete-icon\"\r\n                />\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {/* Add/Edit Task Modal */}\r\n      <TaskModal\r\n        isOpen={isModalOpen}\r\n        onClose={() => setModalOpen(false)}\r\n        onTaskAdded={handleTaskAdded}\r\n        taskToEdit={taskToEdit} // Pass the task data to the modal if we are editing\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":";;AAGA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,UAAU,EAAEC,gBAAgB,QAAQ,QAAQ,CAAC,CAAC;AACjE,SAASC,MAAM,EAAEC,OAAO,QAAQ,gBAAgB,CAAC,CAAC;AAClD,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,WAAW,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;;EAElD;EACA,MAAMiB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMjB,QAAQ,CAAC,CAAC,CAAC,CAAC;MACnCW,QAAQ,CAACM,QAAQ,CAAC;IACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACdkB,UAAU,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMI,aAAa,GAAGA,CAAA,KAAM;IAC1BL,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;IACrBF,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;;EAED;EACA,MAAMQ,eAAe,GAAIC,OAAO,IAAK;IACnCX,QAAQ,CAAEY,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAED,OAAO,CAAC,CAAC,CAAC,CAAC;EACpD,CAAC;;EAED;EACA,MAAME,UAAU,GAAIC,IAAI,IAAK;IAC3BV,aAAa,CAACU,IAAI,CAAC,CAAC,CAAC;IACrBZ,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;EACtB,CAAC;;EAED;EACA,MAAMa,YAAY,GAAG,MAAOC,MAAM,IAAK;IACrC,IAAI;MACF,MAAM1B,UAAU,CAAC0B,MAAM,CAAC,CAAC,CAAC;MAC1BhB,QAAQ,CAACD,KAAK,CAACkB,MAAM,CAAEH,IAAI,IAAKA,IAAI,CAACI,EAAE,KAAKF,MAAM,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACEX,OAAA;IAAKuB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCxB,OAAA;MAAAwB,QAAA,EAAI;IAAmC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5C5B,OAAA;MAAQ6B,OAAO,EAAEhB,aAAc;MAACU,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE1E5B,OAAA;MAAOuB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC3BxB,OAAA;QAAAwB,QAAA,eACExB,OAAA;UAAAwB,QAAA,gBACExB,OAAA;YAAAwB,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChB5B,OAAA;YAAAwB,QAAA,EAAI;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClB5B,OAAA;YAAAwB,QAAA,EAAI;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACf5B,OAAA;YAAAwB,QAAA,EAAI;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnB5B,OAAA;YAAAwB,QAAA,EAAI;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACR5B,OAAA;QAAAwB,QAAA,EACGrB,KAAK,CAAC2B,GAAG,CAAEZ,IAAI,iBACdlB,OAAA;UAAAwB,QAAA,gBACExB,OAAA;YAAAwB,QAAA,EAAKN,IAAI,CAACI;UAAE;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAClB5B,OAAA;YAAAwB,QAAA,EAAKN,IAAI,CAACa;UAAI;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACpB5B,OAAA;YAAAwB,QAAA,EAAKN,IAAI,CAACc;UAAM;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACtB5B,OAAA;YAAAwB,QAAA,EAAKN,IAAI,CAACe;UAAS;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACzB5B,OAAA;YAAAwB,QAAA,gBACExB,OAAA,CAACJ,MAAM;cACLiC,OAAO,EAAEA,CAAA,KAAMZ,UAAU,CAACC,IAAI,CAAE,CAAC;cAAA;cACjCK,SAAS,EAAC;YAAW;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtB,CAAC,eACF5B,OAAA,CAACH,OAAO;cACNgC,OAAO,EAAEA,CAAA,KAAMV,YAAY,CAACD,IAAI,CAACI,EAAE,CAAE,CAAC;cAAA;cACtCC,SAAS,EAAC;YAAa;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA,GAdEV,IAAI,CAACI,EAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAeZ,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGR5B,OAAA,CAACF,SAAS;MACRoC,MAAM,EAAE7B,WAAY;MACpB8B,OAAO,EAAEA,CAAA,KAAM7B,YAAY,CAAC,KAAK,CAAE;MACnC8B,WAAW,EAAEtB,eAAgB;MAC7BP,UAAU,EAAEA,UAAW,CAAC;IAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA5FID,QAAQ;AAAAoC,EAAA,GAARpC,QAAQ;AA8Fd,eAAeA,QAAQ;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}